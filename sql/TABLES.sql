-- create table
--     public.album_keywords
-- (
--     album_id   integer not null,
--     keyword_id integer not null,
--     constraint album_keywords_pkey primary key (album_id, keyword_id),
--     constraint album_keywords_album_id_fkey foreign key (album_id) references albums (album_id) on delete cascade,
--     constraint album_keywords_keyword_id_fkey foreign key (keyword_id) references keywords (keyword_id) on delete cascade
-- ) tablespace pg_default;
--
-- create table
--     public.albums
-- (
--     album_id       serial                 not null,
--     album_name     character varying(255) not null,
--     description    text                   null,
--     cover_photo_id integer                null,
--     constraint albums_pkey primary key (album_id),
--     constraint albums_album_name_key unique (album_name),
--     constraint albums_cover_photo_id_fkey foreign key (cover_photo_id) references photos (photo_id) on delete set null
-- ) tablespace pg_default;
--
-- create table
--     public.keyword_groups
-- (
--     id      bigint generated by default as identity not null,
--     "group" text                                    not null,
--     constraint keyword_groups_pkey primary key (id),
--     constraint keyword_groups_group_key unique ("group")
-- ) tablespace pg_default;
--
--
-- create table
--     public.keywords
-- (
--     keyword_id serial                 not null,
--     keyword    character varying(255) not null,
--     filterable boolean                not null default false,
--     "group"    bigint                 null,
--     constraint keywords_pkey primary key (keyword_id),
--     constraint keywords_keyword_key unique (keyword),
--     constraint keywords_group_fkey foreign key ("group") references keyword_groups (id) on update cascade on delete set default
-- ) tablespace pg_default;
--
-- create table
--     public.likes
-- (
--     id         bigint generated by default as identity not null,
--     created_at timestamp with time zone                not null default now(),
--     user_id    uuid                                    null,
--     photo_id   integer                                 null,
--     constraint likes_pkey primary key (id),
--     constraint likes_photo_id_fkey foreign key (photo_id) references photos (photo_id) on update cascade on delete cascade,
--     constraint likes_user_id_fkey foreign key (user_id) references auth.users (id) on update cascade on delete cascade
-- ) tablespace pg_default;
--
--
-- create table
--     public.photo_keywords
-- (
--     photo_id   integer not null,
--     keyword_id integer not null,
--     constraint photo_keywords_pkey primary key (photo_id, keyword_id),
--     constraint photo_keywords_keyword_id_fkey foreign key (keyword_id) references keywords (keyword_id) on delete cascade,
--     constraint photo_keywords_photo_id_fkey foreign key (photo_id) references photos (photo_id) on delete cascade
-- ) tablespace pg_default;
--
-- create table
--     public.photos
-- (
--     photo_id     serial                   not null,
--     filename     character varying(255)   not null,
--     width        integer                  not null,
--     height       integer                  not null,
--     latitude     numeric(9, 6)            null,
--     longitude    numeric(9, 6)            null,
--     description  text                     null,
--     capture_date timestamp with time zone null default current_timestamp,
--     extension    text                     not null,
--     title        text                     null,
--     constraint photos_pkey primary key (photo_id),
--     constraint photos_filename_key unique (filename)
-- ) tablespace pg_default;